name: CI

on:
  repository_dispatch:
    types: [rebuild]
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.ci-skip-step.outputs.ci-skip }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: ci-skip-step
        uses: mstachniuk/ci-skip@master
        with:
          commit-filter: '[ci skip];[ci-skip];[skip ci];[skip-ci]'
          commit-filter-separator: ';'

  lint:
    needs: init
    if: ((github.event_name == 'repository_dispatch' && github.event.action == 'rebuild') || needs.init.outputs.skip == 'false')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pre-commit
          key: precommit-${{ env.pythonLocation }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            precommit-${{ env.pythonLocation }}-
            precommit-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Linting
        run: |
          tox -e lint
      - name: Documentation check
        run: |
          tox -e check-docs

  download:
    needs: init
    if: ((github.event_name == 'repository_dispatch' && github.event.action == 'rebuild') || needs.init.outputs.skip == 'false')
    runs-on: ubuntu-latest
    steps:
      - name: Restore data cache
        id: data-cache
        uses: actions/cache@v2
        with:
          path: examples/.data/
          # TODO: also cache requirements once we know what they are
          key: data-${{ runner.os }}-${{ hashFiles('**/.scripts/download/download_data.sh') }}-${{ hashFiles('**/.scripts/download/install_requirements.sh') }}
          restore-keys: |
            data-${{ runner.os }}-${{ hashFiles('**/.scripts/download/download_datasets.sh') }}-

      - name: Download datasets
        if: steps.data-cache.outputs.cache-hit == 'false'
        run: |
          ./.scripts/download/install_requirements.sh
          ./.scripts/download/download_datasets.sh

  # test/regeneration can be combined into 1 step, making it <=2x fast, but highly coupled
  test:
    needs: download
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Get the triggering event
        run: |
          echo "${{ github.event_name }} ${{ github.event.action }}"
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Restore pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Testing
        run: |
          tox
        env:
          PLATFORM: ubuntu-latest

  regenerate:
    # TODO: needs to be checked, esp. `github.ref` in case of a workflow_dispatch
    if: ((github.event_name == 'repository_dispatch' && github.event.action == 'rebuild') || github.event_name == 'push') && github.ref == 'refs/heads/master'
    needs: [lint, test]
    runs-on: ubuntu-latest
    outputs:
      needs_rebuild: ${{ steps.auto-commit.outputs.changes_detected }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Regenerate documentation
        run: |
          tox -e docs
        env:
          PLATFORM: ubuntu-latest

      - name: Commit changes
        id: auto-commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          # changes from auto-commit will not trigger another workflow
          commit_message: '[auto] Regenerate tutorials/examples'
          file_pattern: docs/source/auto_* docs/source/gen_modules/backreferences/*
          commit_user_name: 'CI'
          skip_dirty_check: true

  rebuild_docs:
    needs: regenerate
    # TODO: if: always()?
    if: needs.regenerate.outputs.needs_rebuild == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Request documentation rebuild
        # TODO: update the secrets
        run: |
          echo "TODO: request doc rebuild..."
          # curl -X POST -d "branches=master" -d "token=${{ secrets.RTD_TOKEN }}" "${{ secrets.RTD_WEBHOOK }}"
