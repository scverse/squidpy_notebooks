
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/graph/compute_interaction_matrix.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_graph_compute_interaction_matrix.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_graph_compute_interaction_matrix.py:


Compute interaction matrix
--------------------------

This example shows how to compute the interaction matrix.

The interaction matrix quantifies the number of edges that nodes belonging to a given annotation shares with the other
annotations. It's a descriptive statistics of the spatial graph.

.. seealso::

    See :ref:`sphx_glr_auto_examples_graph_compute_spatial_neighbors.py` for general usage of
    :func:`squidpy.gr.spatial_neighbors`.

.. GENERATED FROM PYTHON SOURCE LINES 16-21

.. code-block:: default

    import squidpy as sq

    adata = sq.datasets.imc()
    adata





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    AnnData object with n_obs × n_vars = 4668 × 34
        obs: 'cell type'
        uns: 'cell type_colors'
        obsm: 'spatial'



.. GENERATED FROM PYTHON SOURCE LINES 22-24

First, we need to compute a connectivity matrix from spatial coordinates. We can use
:func:`squidpy.gr.spatial_neighbors` for this purpose.

.. GENERATED FROM PYTHON SOURCE LINES 24-26

.. code-block:: default

    sq.gr.spatial_neighbors(adata)








.. GENERATED FROM PYTHON SOURCE LINES 27-29

We can compute the interaction matrix with :func:`squidpy.gr.interaction_matrix`. Specify ``normalized = True``
if you want a row-normalized matrix. Results can be visualized with :func:`squidpy.pl.interaction_matrix`.

.. GENERATED FROM PYTHON SOURCE LINES 29-31

.. code-block:: default

    sq.gr.interaction_matrix(adata, cluster_key="cell type")
    sq.pl.interaction_matrix(adata, cluster_key="cell type")



.. image:: /auto_examples/graph/images/sphx_glr_compute_interaction_matrix_001.png
    :alt: Interaction matrix
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/runner/work/squidpy_notebooks/squidpy_notebooks/.tox/docs/lib/python3.8/site-packages/pandas/core/arrays/categorical.py:2487: FutureWarning: The `inplace` parameter in pandas.Categorical.remove_unused_categories is deprecated and will be removed in a future version.
      res = method(*args, **kwargs)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.904 seconds)

**Estimated memory usage:**  16 MB


.. _sphx_glr_download_auto_examples_graph_compute_interaction_matrix.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: compute_interaction_matrix.py <compute_interaction_matrix.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: compute_interaction_matrix.ipynb <compute_interaction_matrix.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
