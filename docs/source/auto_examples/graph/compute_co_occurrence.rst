
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/graph/compute_co_occurrence.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/theislab/squidpy_notebooks/master?filepath=docs/source/auto_examples/graph/compute_co_occurrence.ipynb
      :alt: Launch binder
      :width: 150 px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_graph_compute_co_occurrence.py:

Compute Co-occurrence probability
---------------------------------

This example shows how to compute the co-occurrence probability.

The co-occurrence score is defined as:

.. math::
    \frac{p(exp|cond)}{p(exp)}

where :math:`p(exp|cond)` is the conditional probability of observing a cluster :math:`exp` conditioned
on the presence
of a cluster :math:`cond`, whereas :math:`p(exp)` is the probability of observing :math:`exp` in the
radius size of interest.
The score is computed across increasing radii size around each cell in the tissue.

.. seealso::

    See :ref:`sphx_glr_auto_examples_graph_compute_ripley_k.py` for
    another score to describe spatial patterns with :func:`squidpy.gr.ripley_k`.

.. GENERATED FROM PYTHON SOURCE LINES 24-30

.. code-block:: default

    import scanpy as sc
    import squidpy as sq

    adata = sq.datasets.imc()
    adata


.. GENERATED FROM PYTHON SOURCE LINES 31-33

We can compute the co-occurrence score with :func:`squidpy.gr.co_occurrence`.
Results can be visualized with :func:`squidpy.pl.co_occurrence`.

.. GENERATED FROM PYTHON SOURCE LINES 33-36

.. code-block:: default

    sq.gr.co_occurrence(adata, cluster_key="cell type")
    sq.pl.co_occurrence(adata, cluster_key="cell type", clusters="basal CK tumor cell")


.. GENERATED FROM PYTHON SOURCE LINES 37-39

We can further visualize tissue organization in spatial coordinates
with :func:`scanpy.pl.spatial`.

.. GENERATED FROM PYTHON SOURCE LINES 39-40

.. code-block:: default

    sc.pl.spatial(adata, color="cell type", spot_size=10)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)

**Estimated memory usage:**  0 MB


.. _sphx_glr_download_auto_examples_graph_compute_co_occurrence.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: compute_co_occurrence.py <compute_co_occurrence.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: compute_co_occurrence.ipynb <compute_co_occurrence.ipynb>`
