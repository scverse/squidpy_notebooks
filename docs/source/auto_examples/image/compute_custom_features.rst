
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/image/compute_custom_features.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/theislab/squidpy_notebooks/master?filepath=docs/source/auto_examples/image/compute_custom_features.ipynb
      :alt: Launch binder
      :width: 150 px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_image_compute_custom_features.py:

Extract custom features
-----------------------

This example shows how to extract features from the tissue image using a custom function.

The custom feature calculation function can be any python function that takes an image as input, and
returns a list of features.
Here, we show a simple example by defining a function to calculate the mean of the images.

.. seealso::

    See :ref:`sphx_glr_auto_examples_image_compute_features.py` for general usage of
    :func:`squidpy.im.calculate_image_features`.

.. GENERATED FROM PYTHON SOURCE LINES 17-21

.. code-block:: default


    import scanpy as sc
    import squidpy as sq


.. GENERATED FROM PYTHON SOURCE LINES 22-23

Lets load a H&E Visium dataset.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: default


    # get spatial dataset including high-resolution tissue image
    img = sq.datasets.visium_hne_image_crop()
    adata = sq.datasets.visium_hne_adata_crop()



.. GENERATED FROM PYTHON SOURCE LINES 30-31

Define a custom feature extraction function.

.. GENERATED FROM PYTHON SOURCE LINES 31-40

.. code-block:: default



    def mean_fn(arr):
        """Compute mean of arr."""
        import numpy as np

        return np.mean(arr)



.. GENERATED FROM PYTHON SOURCE LINES 41-42

Now we can extract features using `mean_fn` by providing it within ``features_kwargs``

.. GENERATED FROM PYTHON SOURCE LINES 42-52

.. code-block:: default


    sq.im.calculate_image_features(
        adata,
        img,
        features="custom",
        features_kwargs={"custom": {"func": mean_fn}},
        key_added="custom_features",
        show_progress_bar=False,
    )


.. GENERATED FROM PYTHON SOURCE LINES 53-54

The result is stored in ``adata.obsm['custom_features']``.

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: default


    adata.obsm["custom_features"].head()


.. GENERATED FROM PYTHON SOURCE LINES 58-61

Use :func:`squidpy.pl.extract` to plot the histogram features on the tissue image or have a look at
`our interactive visualisation tutorial <../../external_tutorials/tutorial_napari.html>`_ to learn
how to use our interactive :mod:`napari` plugin.

.. GENERATED FROM PYTHON SOURCE LINES 61-67

.. code-block:: default


    sc.pl.spatial(
        sq.pl.extract(adata, "custom_features"),
        color=[None, "mean_fn_0"],
        bw=True,
    )


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)

**Estimated memory usage:**  0 MB


.. _sphx_glr_download_auto_examples_image_compute_custom_features.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: compute_custom_features.py <compute_custom_features.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: compute_custom_features.ipynb <compute_custom_features.ipynb>`
