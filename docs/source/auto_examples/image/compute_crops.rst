
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/image/compute_crops.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/theislab/squidpy_notebooks/master?filepath=docs/source/auto_examples/image/compute_crops.ipynb
      :alt: Launch binder
      :width: 150 px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_image_compute_crops.py:

Crop images with ImageContainer
-------------------------------

This example shows how crop images from :class:`squidpy.im.ImageContainer`.

Specifically, it shows how to use:

    - :meth:`squidpy.im.ImageContainer.crop_corner()`
    - :meth:`squidpy.im.ImageContainer.crop_center()`

.. seealso::

    See :ref:`sphx_glr_auto_examples_image_compute_image_container.py` for general usage of
    :class:`squidpy.im.ImageContainer`.

.. GENERATED FROM PYTHON SOURCE LINES 18-23

.. code-block:: default


    import squidpy as sq

    import matplotlib.pyplot as plt


.. GENERATED FROM PYTHON SOURCE LINES 24-25

Load a fluorescence Visium image.

.. GENERATED FROM PYTHON SOURCE LINES 25-27

.. code-block:: default

    img = sq.datasets.visium_fluo_image_crop()


.. GENERATED FROM PYTHON SOURCE LINES 28-34

Extracting single crops:
Crops need to be sized and located. We distinguish crops located based on a
corner coordinate of the crop and crops located based on the center coordinate
of the crop.
You can specify the crop coordinates in pixels (as ``int``) or in percentage of total image size (as ``float``).
In addition, you can specify a scaling factor for the crop.

.. GENERATED FROM PYTHON SOURCE LINES 34-43

.. code-block:: default


    crop_corner = img.crop_corner(1000, 1000, size=800)

    crop_center = img.crop_center(1400, 1400, radius=400)

    fig, axes = plt.subplots(1, 2)
    crop_corner.show(ax=axes[0])
    crop_center.show(ax=axes[1])


.. GENERATED FROM PYTHON SOURCE LINES 44-45

The result of the cropping functions is another ImageContainer

.. GENERATED FROM PYTHON SOURCE LINES 45-48

.. code-block:: default


    crop_corner


.. GENERATED FROM PYTHON SOURCE LINES 49-50

You can subset the associated ``adata`` to the cropped image:

.. GENERATED FROM PYTHON SOURCE LINES 50-54

.. code-block:: default


    adata = sq.datasets.visium_fluo_adata_crop()
    adata


.. GENERATED FROM PYTHON SOURCE LINES 55-56

Note the number of observations in ``adata`` before and after subsetting.

.. GENERATED FROM PYTHON SOURCE LINES 56-60

.. code-block:: default


    adata_crop = crop_corner.subset(adata)
    adata_crop


.. GENERATED FROM PYTHON SOURCE LINES 61-68

Visualise the result in napari:

.. code-block:: python

    import napari
    with napari.gui_qt():
        crop_corner.interactive(adata_crop)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)

**Estimated memory usage:**  0 MB


.. _sphx_glr_download_auto_examples_image_compute_crops.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: compute_crops.py <compute_crops.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: compute_crops.ipynb <compute_crops.ipynb>`
