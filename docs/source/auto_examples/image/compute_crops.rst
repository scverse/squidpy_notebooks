
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/image/compute_crops.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_image_compute_crops.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_image_compute_crops.py:


Crop images with ImageContainer
-------------------------------

This example shows how crop images from :class:`squidpy.im.ImageContainer`.

Specifically, it shows how to use:

    - :meth:`squidpy.im.ImageContainer.crop_corner()`
    - :meth:`squidpy.im.ImageContainer.crop_center()`

.. seealso::

    See :ref:`sphx_glr_auto_examples_image_compute_image_container.py` for general usage of
    :class:`squidpy.im.ImageContainer`.

.. GENERATED FROM PYTHON SOURCE LINES 18-23

.. code-block:: default


    import squidpy as sq

    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Load a H&E Visium image.

.. GENERATED FROM PYTHON SOURCE LINES 25-27

.. code-block:: default

    img = sq.datasets.visium_hne_image_crop()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      0%|          | 0.00/35.6M [00:00<?, ?B/s]      0%|          | 40.0k/35.6M [00:00<02:06, 295kB/s]      1%|          | 208k/35.6M [00:00<00:43, 844kB/s]       2%|2         | 872k/35.6M [00:00<00:13, 2.67MB/s]     10%|9         | 3.45M/35.6M [00:00<00:03, 9.18MB/s]     23%|##3       | 8.34M/35.6M [00:00<00:01, 18.9MB/s]     37%|###7      | 13.2M/35.6M [00:00<00:00, 24.8MB/s]     51%|#####1    | 18.2M/35.6M [00:00<00:00, 28.8MB/s]     65%|######5   | 23.1M/35.6M [00:01<00:00, 31.3MB/s]     79%|#######9  | 28.3M/35.6M [00:01<00:00, 33.4MB/s]     94%|#########4| 33.5M/35.6M [00:01<00:00, 35.2MB/s]    100%|##########| 35.6M/35.6M [00:01<00:00, 26.2MB/s]




.. GENERATED FROM PYTHON SOURCE LINES 28-33

Extracting single crops:
Crops need to be sized and located. We distinguish crops located based on a
corner coordinate of the crop and crops located based on the center coordinate
of the crop.
You can specify the crop coordinates in pixels (as ``int``) or in percentage of total image size (as ``float``)

.. GENERATED FROM PYTHON SOURCE LINES 33-42

.. code-block:: default


    crop_corner = img.crop_corner(1000, 1000, size=400)

    crop_center = img.crop_center(1200, 1200, radius=200)

    fig, axes = plt.subplots(1, 2)
    crop_corner.show(ax=axes[0])
    crop_center.show(ax=axes[1])




.. image:: /auto_examples/image/images/sphx_glr_compute_crops_001.png
    :alt: compute crops
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 43-44

The result of the cropping functions is another ImageContainer

.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: default


    crop_corner





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    ImageContainer object with 1 layer:<p style='text-indent: 25px; margin-top: 0px;'><strong>image</strong>: <em>y</em> (400), <em>x</em> (400), <em>channels</em> (3)</p>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.752 seconds)

**Estimated memory usage:**  53 MB


.. _sphx_glr_download_auto_examples_image_compute_crops.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: compute_crops.py <compute_crops.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: compute_crops.ipynb <compute_crops.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
