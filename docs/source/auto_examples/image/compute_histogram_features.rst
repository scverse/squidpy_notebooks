
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/image/compute_histogram_features.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_image_compute_histogram_features.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_image_compute_histogram_features.py:


Histogram features
------------------

Here, we use :func:`squidpy.im.calculate_image_features` to extract histogram features from the tissue image.
Please have a look at :ref:`sphx_glr_auto_examples_image_compute_features.py` for the general usage of
:func:`squidpy.im.calculate_image_features`.

Histogram features give a more detailled view than summary features
(:ref:`sphx_glr_auto_examples_image_compute_summary_features.py`)
by computing a histogram of each image channel and returning bin-counts for each visium spot.
Use ``features = 'histogram'`` to calculate the features.
This will internally call :meth:`squidpy.im.ImageContainer.get_histogram_features`.

In addition to ``feature_name`` and ``channels`` we can specify the following ``features_kwargs``:
- ``bins``: Number of bins of the histogram. Default is 10
- ``v_range``: Range on which values are binned. Default is the whole image range

.. GENERATED FROM PYTHON SOURCE LINES 19-26

.. code-block:: default


    import os

    import squidpy as sq

    import scanpy as sc








.. GENERATED FROM PYTHON SOURCE LINES 27-28

Lets load a fluorescence visisum dataset and calculate bin-counts (3 bins) of channels 0 and 1.

.. GENERATED FROM PYTHON SOURCE LINES 28-39

.. code-block:: default



    # get spatial dataset including hires tissue image
    img = sq.im.ImageContainer(os.path.expanduser("~/.cache/squidpy/tutorial_data/visium_fluo_crop.tiff"))
    adata = sc.read(os.path.expanduser("~/.cache/squidpy/tutorial_data/visium_fluo_crop.h5ad"))

    # calculate histogram features and save in key "histogram_features"
    sq.im.calculate_image_features(
        adata, img, features="histogram", features_kwargs={"histogram": {"bins": 3}}, key_added="histogram_features"
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/hannah.spitzer/projects/spatial_scanpy/squidpy_notebooks/.tox/docs/lib/python3.8/site-packages/rasterio/__init__.py:221: NotGeoreferencedWarning: Dataset has no geotransform set. The identity matrix may be returned.
      s = DatasetReader(path, driver=driver, sharing=sharing, **kwargs)




.. GENERATED FROM PYTHON SOURCE LINES 40-41

The result is stored in `adata.obsm['histogram_features']`

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: default


    adata.obsm["histogram_features"].head()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>histogram_ch_0_bin_0</th>
          <th>histogram_ch_0_bin_1</th>
          <th>histogram_ch_0_bin_2</th>
          <th>histogram_ch_1_bin_0</th>
          <th>histogram_ch_1_bin_1</th>
          <th>histogram_ch_1_bin_2</th>
          <th>histogram_ch_2_bin_0</th>
          <th>histogram_ch_2_bin_1</th>
          <th>histogram_ch_2_bin_2</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>AAACGAGACGGTTGAT-1</th>
          <td>28201</td>
          <td>1649</td>
          <td>2191</td>
          <td>32041</td>
          <td>0</td>
          <td>0</td>
          <td>32028</td>
          <td>13</td>
          <td>0</td>
        </tr>
        <tr>
          <th>AAAGGGATGTAGCAAG-1</th>
          <td>30072</td>
          <td>748</td>
          <td>1221</td>
          <td>31510</td>
          <td>529</td>
          <td>2</td>
          <td>32040</td>
          <td>1</td>
          <td>0</td>
        </tr>
        <tr>
          <th>AAATGGCATGTCTTGT-1</th>
          <td>29032</td>
          <td>2252</td>
          <td>757</td>
          <td>30793</td>
          <td>1002</td>
          <td>246</td>
          <td>32009</td>
          <td>31</td>
          <td>1</td>
        </tr>
        <tr>
          <th>AAATGGTCAATGTGCC-1</th>
          <td>28672</td>
          <td>2411</td>
          <td>958</td>
          <td>32041</td>
          <td>0</td>
          <td>0</td>
          <td>32041</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>AAATTAACGGGTAGCT-1</th>
          <td>29996</td>
          <td>1116</td>
          <td>929</td>
          <td>31367</td>
          <td>674</td>
          <td>0</td>
          <td>32030</td>
          <td>11</td>
          <td>0</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 45-50

Use :func:`squidpy.pl.extract` to plot the histogram features on the tissue image.
With these features we can e.g. apreciate the detailled distribution of
intensity values of channel 0 (DAPI stain) on the different bins.

TODO: reference to interactive plotting

.. GENERATED FROM PYTHON SOURCE LINES 50-57

.. code-block:: default


    sc.set_figure_params(facecolor="white", figsize=(8, 8))
    sc.pl.spatial(
        sq.pl.extract(adata, "histogram_features"),
        color=[None, "histogram_ch_0_bin_0", "histogram_ch_0_bin_1", "histogram_ch_0_bin_2"],
        bw=True,
    )



.. image:: /auto_examples/image/images/sphx_glr_compute_histogram_features_001.png
    :alt: histogram_ch_0_bin_0, histogram_ch_0_bin_1, histogram_ch_0_bin_2
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  23.793 seconds)

**Estimated memory usage:**  814 MB


.. _sphx_glr_download_auto_examples_image_compute_histogram_features.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: compute_histogram_features.py <compute_histogram_features.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: compute_histogram_features.ipynb <compute_histogram_features.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
