
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/image/compute_gray.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_image_compute_gray.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_image_compute_gray.py:


Converting to Grayscale
------------------

This example shows how to use :func:`squidpy.im.process_img` to convert and image layer
of :class:`squidpy.im.ImageContainer` to grayscale.

We use the argument ``processing="gray"`` to smooth the image.
This calls :func:`skimage.color.rgb2gray` in the background.

See also :ref:`sphx_glr_auto_examples_image_compute_smooth.py`
and :ref:`sphx_glr_auto_examples_image_compute_process_hires.py`

.. GENERATED FROM PYTHON SOURCE LINES 14-21

.. code-block:: default


    import os

    import squidpy as sq

    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 22-27

First, we load an H&E stained tissue image.
Here, we only load a cropped dataset to speed things up.
In general, :func:`squidpy.im.process_img` can also process very large images
(see :ref:`sphx_glr_auto_examples_image_compute_process_hires.py`).
TODO: add howto download data

.. GENERATED FROM PYTHON SOURCE LINES 27-30

.. code-block:: default

    img_path = os.path.expanduser("~/.cache/squidpy/tutorial_data/visium_hne_crop.tiff")
    img = sq.im.ImageContainer(img_path)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/hannah.spitzer/projects/spatial_scanpy/squidpy_notebooks/.tox/docs/lib/python3.8/site-packages/rasterio/__init__.py:221: NotGeoreferencedWarning: Dataset has no geotransform set. The identity matrix may be returned.
      s = DatasetReader(path, driver=driver, sharing=sharing, **kwargs)




.. GENERATED FROM PYTHON SOURCE LINES 31-38

Then, we convert the image to grayscale and plot the result.
With the argument ``img_id`` we can select the image layer that should be processed.
When converting to grayscale, the channel dimensions change from 3 to 1.
By default, the name of the resulting channel dimension will be ``{{original_channel_name}}_gray``.
Use the argument ``channel_id`` to set a new channel name explicitely.
By default, the resulting image is saved in the layer ``image_gray`.
This behaviour can be changed with the arguments ``copy`` and ``key_added``.

.. GENERATED FROM PYTHON SOURCE LINES 38-46

.. code-block:: default


    sq.im.process_img(img, img_id="image", processing="gray")

    fig, axes = plt.subplots(1, 2)
    axes[0].imshow(img["image"])
    axes[1].imshow(img["image_gray"], cmap="gray")
    for ax in axes:
        ax.axis("off")



.. image:: /auto_examples/image/images/sphx_glr_compute_gray_001.png
    :alt: compute gray
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  10.749 seconds)

**Estimated memory usage:**  412 MB


.. _sphx_glr_download_auto_examples_image_compute_gray.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: compute_gray.py <compute_gray.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: compute_gray.ipynb <compute_gray.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
