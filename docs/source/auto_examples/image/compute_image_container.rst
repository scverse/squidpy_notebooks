
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/image/compute_image_container.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/theislab/squidpy_notebooks/master?filepath=docs/source/auto_examples/image/compute_image_container.ipynb
      :alt: Launch binder
      :width: 150 px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_image_compute_image_container.py:

ImageContainer object
---------------------

This example shows how to use :class:`squidpy.im.ImageContainer` to interact with image structured data.

.. seealso::

    See :ref:`sphx_glr_auto_examples_image_compute_crops.py` for examples how to crop images using
    :class:`squidpy.im.ImageContainer`.

.. GENERATED FROM PYTHON SOURCE LINES 13-16

.. code-block:: default


    import squidpy as sq


.. GENERATED FROM PYTHON SOURCE LINES 17-20

Load a pre-loaded image.
To load your own data, use the ImageContainer constructor:
``squidpy.im.ImageContainer(<image-path-or-array>)``

.. GENERATED FROM PYTHON SOURCE LINES 20-22

.. code-block:: default

    img = sq.datasets.visium_hne_image()


.. GENERATED FROM PYTHON SOURCE LINES 23-27

Representation image in container:
The image(s) are in the :attr:`img.data` attribute of the instance, which is an
:class:`xarray.Dataset`. Note that this is a Dataset so that this attribute can hold
multiple image-structured layers.

.. GENERATED FROM PYTHON SOURCE LINES 27-29

.. code-block:: default

    print(img.data)


.. GENERATED FROM PYTHON SOURCE LINES 30-32

You can access specific image-structured arrays in the image using their
names.

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: default

    print(img["image"])


.. GENERATED FROM PYTHON SOURCE LINES 35-38

Lazy loading:
The image data can be lazily loaded with `netcdf` and explicitly loaded into
memory via ``.data.load()`` and saved to disk via ``.save()``:

.. GENERATED FROM PYTHON SOURCE LINES 38-40

.. code-block:: default

    img.data.load()


.. GENERATED FROM PYTHON SOURCE LINES 41-47

You can add images into the ImageContainer using ``.add_img()``:
Here we are adding the same image again under a different name as a toy example.
It shares the same channel dimension with "image", so we can use the same
label for ``channel_dim`` here.
If the added image layer has a different channel dimension, just specify a new
label for ``channel_dim``.

.. GENERATED FROM PYTHON SOURCE LINES 47-54

.. code-block:: default

    img.add_img(
        img=img.data["image"],
        layer="image2",
        channel_dim="channels",
        lazy=True,
    )
    img


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)

**Estimated memory usage:**  0 MB


.. _sphx_glr_download_auto_examples_image_compute_image_container.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: compute_image_container.py <compute_image_container.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: compute_image_container.ipynb <compute_image_container.ipynb>`
