
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/image/compute_summary_features.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_image_compute_summary_features.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_image_compute_summary_features.py:


Summary features
--------------

Here, we use :func:`squidpy.im.calculate_image_features` to extract summary features from the tissue image.
Please have a look at ef:`sphx_glr_auto_examples_image_compute_features.py`
for the general usage of :func:`squidpy.im.calculate_image_features`.

Summary features give a good overview over the intensity of each image channels at the location of the visium spots.
They are calculated by using ``features = 'summary'``,
which will internally call :meth:`squidpy.im.ImageContainer.get_summary_features`.

In addition to ``feature_name`` and ``channels`` we can specify the following ``features_kwargs``:
- ``quantiles``: Quantiles that are computed. By default, the 0.9th, 0.5th, and 0.1th quantiles are calculated
- ``mean``: Compute mean. Off by default
- ``std``: Compute std deviation. Off by default.

.. GENERATED FROM PYTHON SOURCE LINES 18-25

.. code-block:: default


    import os

    import squidpy as sq

    import scanpy as sc








.. GENERATED FROM PYTHON SOURCE LINES 26-27

First, we load a fluorescence visisum dataset.

.. GENERATED FROM PYTHON SOURCE LINES 27-33

.. code-block:: default


    # get spatial dataset including hires tissue image
    img = sq.im.ImageContainer(os.path.expanduser("~/.cache/squidpy/tutorial_data/visium_fluo_crop.tiff"))
    adata = sc.read(os.path.expanduser("~/.cache/squidpy/tutorial_data/visium_fluo_crop.h5ad"))






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/hannah.spitzer/projects/spatial_scanpy/squidpy_notebooks/.tox/docs/lib/python3.8/site-packages/rasterio/__init__.py:221: NotGeoreferencedWarning: Dataset has no geotransform set. The identity matrix may be returned.
      s = DatasetReader(path, driver=driver, sharing=sharing, **kwargs)




.. GENERATED FROM PYTHON SOURCE LINES 34-38

Then, we and calculate the 0.1th quantile and mean for the visium spots of the fluorescence channels 0 (DAPI)
and 1 (GFAP).
In order to only get statistics of the tissue underneath the spots, we use the argument ``mask_circle = True``.
When not setting this, statistics are calculated using a square crop centered on the spot.

.. GENERATED FROM PYTHON SOURCE LINES 38-57

.. code-block:: default


    # calculate summary features and save in key "summary_features"
    sq.im.calculate_image_features(
        adata,
        img,
        features="summary",
        features_kwargs={
            "summary": {
                "mean": True,
                "quantiles": [
                    0.1,
                ],
                "channels": [0, 1],
            }
        },
        key_added="summary_features",
        mask_circle=True,
    )








.. GENERATED FROM PYTHON SOURCE LINES 58-59

The result is stored in `adata.obsm['summary_features']`

.. GENERATED FROM PYTHON SOURCE LINES 59-61

.. code-block:: default

    adata.obsm["summary_features"].head()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>summary_quantile_0.1_ch_0</th>
          <th>summary_mean_ch_0</th>
          <th>summary_quantile_0.1_ch_1</th>
          <th>summary_mean_ch_1</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>AAACGAGACGGTTGAT-1</th>
          <td>0.0</td>
          <td>6849.760120</td>
          <td>0.0</td>
          <td>3762.582691</td>
        </tr>
        <tr>
          <th>AAAGGGATGTAGCAAG-1</th>
          <td>0.0</td>
          <td>4469.448519</td>
          <td>0.0</td>
          <td>3824.862145</td>
        </tr>
        <tr>
          <th>AAATGGCATGTCTTGT-1</th>
          <td>0.0</td>
          <td>5944.567897</td>
          <td>0.0</td>
          <td>5481.824787</td>
        </tr>
        <tr>
          <th>AAATGGTCAATGTGCC-1</th>
          <td>0.0</td>
          <td>5259.799257</td>
          <td>0.0</td>
          <td>2628.194501</td>
        </tr>
        <tr>
          <th>AAATTAACGGGTAGCT-1</th>
          <td>0.0</td>
          <td>4468.428701</td>
          <td>0.0</td>
          <td>4036.154302</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 62-67

Use :func:`squidpy.pl.extract` to plot the summary features on the tissue image.
Note how the spatial distribution of channel means is different for fluorescence channels 0 (DAPI stain)
and 1 (GFAP stain).

TODO: reference to interactive plotting

.. GENERATED FROM PYTHON SOURCE LINES 67-70

.. code-block:: default


    sc.set_figure_params(facecolor="white", figsize=(8, 8))
    sc.pl.spatial(sq.pl.extract(adata, "summary_features"), color=[None, "summary_mean_ch_0", "summary_mean_ch_1"], bw=True)



.. image:: /auto_examples/image/images/sphx_glr_compute_summary_features_001.png
    :alt: summary_mean_ch_0, summary_mean_ch_1
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  27.207 seconds)

**Estimated memory usage:**  775 MB


.. _sphx_glr_download_auto_examples_image_compute_summary_features.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: compute_summary_features.py <compute_summary_features.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: compute_summary_features.ipynb <compute_summary_features.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
